#ifndef CAN_RECEIVER_HPP
#define CAN_RECEIVER_HPP

#include "{{ alias }}_canReceiverHook.h"
#include "qualifiedVal.hpp"
#include "stdbool.h"
#include "stdint.h"

namespace CanGen
{

using namespace ::QualifiedVal;

//--------------------------------------------------------------------------------------------------
// Receive message ID getters for iteration
//--------------------------------------------------------------------------------------------------
uint32_t CANRX_{{ alias }}_GetMidFromIdx(const uint32_t muxIdx);

//--------------------------------------------------------------------------------------------------
// Signal receive unpack functions
//--------------------------------------------------------------------------------------------------
{% for signal in signalsToReceive %}
// {{ signal["name"] }}
{{ signal["rawType"] }} CANRX_{{ alias }}_GetSRawFromFrame_{{ signal["name"] }}(const uint8_t * const pData);
{{ signal["rawType"] }} CANRX_{{ alias }}_GetSRaw_{{ signal["name"] }}(void);
{{ signal["convType"] }} CANRX_{{ alias }}_GetSFromFrame_{{ signal["name"] }}(const uint8_t * const pData);
{{ signal["convType"] }} CANRX_{{ alias }}_GetS_{{ signal["name"] }}(void);

{% endfor %}
//--------------------------------------------------------------------------------------------------
// Message receive init and run
//--------------------------------------------------------------------------------------------------
bool CANRX_{{ alias }}_Init(void);
void CANRX_{{ alias }}_Run1ms(void);

} // namespace CanGen

#endif // CAN_RECEIVER_HPP
